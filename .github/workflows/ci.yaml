name: CI

on:
  push:
    branches: [main]
    paths:
      - "**.lock"
      - "**.rs"
      - "**.nix"
      - "Cargo.toml"
      - ".github/workflows/ci.yaml"
  pull_request:
    paths:
      - "**.lock"
      - "**.rs"
      - "**.nix"
      - "Cargo.toml"
      - ".github/workflows/ci.yaml"
  workflow_dispatch:
  workflow_call:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

permissions:
  security-events: none

jobs:
  build:
    name: Build

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false

      - name: Install Nix
        uses: cachix/install-nix-action@754537aaedb35f72ab11a60cc162c49ef3016495 # v31

      - name: Run build
        run: |
          nix build --print-build-logs .#

  format-and-lint:
    name: Format and lint

    runs-on: ubuntu-latest
    outputs:
      sarif_uploaded: ${{ steps.set-artifact-output.outputs.sarif_uploaded }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false

      - name: Install Nix
        uses: cachix/install-nix-action@754537aaedb35f72ab11a60cc162c49ef3016495 # v31

      - name: Run clippy check
        id: save-clippy
        continue-on-error: true
        run: |
          nix build --print-build-logs .#checks.x86_64-linux.clippy
          [ -L result ] || exit 1

      - name: Upload SARIF artifact
        if: steps.save-clippy.outcome == 'success'
        id: clippy-artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: sarif-results
          path: result
          retention-days: 1

      - name: Confirm SARIF artifact upload
        id: set-artifact-output
        if: steps.clippy-artifact.outcome == 'success'
        run: |
         echo "sarif_uploaded=true" >> "$GITHUB_OUTPUT"

      - name: Run flake checks
        run: |
          nix flake check --print-build-logs --show-trace

  upload-sarif:
    name: Upload SARIF results

    runs-on: ubuntu-latest
    needs: format-and-lint
    if: needs.format-and-lint.outputs.sarif_uploaded == 'true'

    permissions:
      security-events: write
      # actions: read
      # contents: read

    steps:
      - name: Download SARIF artifact
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4
        with:
          name: sarif-results
          path: .

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@45775bd8235c68ba998cffa5171334d58593da47 # v3
        with:
          sarif_file: result

  release-gate:
    name: CI Release gate
    needs: [build, format-and-lint]

    if: ${{ always() }}

    runs-on: ubuntu-latest

    steps:
      - name: Exit with error
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: exit 1
